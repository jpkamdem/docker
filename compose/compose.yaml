name: ${APP_NAME}

services:
  db:
    image: username/postgres:1.0
    build:
      context: ./
      dockerfile: Dockerfile
      restart: always
    ports:
      - name: db
        host_ip: 127.0.0.1
        published: 5432
        target: 5432
    networks:
      - private
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD_FILE: /run/secrets/db_password
      DATABASE_URL: ${DATABASE_URL}
    env_file:
      - ./.env
    secrets:
      - source: db_password
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "foo"]
      interval: 10s
      timeout: 10s
      start_period: 30s
      retries: 3

  db-manager:
    image: dpage/pgadmin4:9.8.0
    restart: always
    ports:
      - name: db-manager
        host_ip: 127.0.0.1
        published: 4444
        target: 80
    networks:
      - private
    volumes:
      - db-manager_data:/var/lib/pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD_FILE: /run/secrets/db-manager_password
    env_file:
      - ./.env
    secrets:
      - source: db-manager_password
    healthcheck:
      test: ["CMD", "wget", "-O", "-", "http://127.0.0.1:80/misc/ping"]
      interval: 10s
      timeout: 10s
      start_period: 30s
      retries: 3
    depends_on:
      db:
        condition: service_healthy
        restart: true

volumes:
  db_data:
  db-manager_data:

networks:
  public:
  private:

secrets:
  db_password:
    file: ./db_password.txt
  db-manager_password:
    file: ./db-manager_password.txt
